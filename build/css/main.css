/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */button,hr,input{overflow:visible}progress,sub,sup{vertical-align:baseline}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}hr{box-sizing:content-box;height:0}pre{}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}.form-wrapper,.header{max-width:960px;height:auto}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}.header-wrap{grid-area:header}.left-side{grid-area:left;background:#d3d3d3}.right-side{grid-area:right;background:gray}.form-wrapper{display:grid;grid-template-columns:324px 636px;grid-template-rows:auto auto;grid-template-areas:"header header" "left right";margin:0 auto}.header-wrap{width:100%;height:auto;background-color:#344eff}.header{display:flex;justify-content:space-between;align-items:center;margin:30px auto 0;padding:45px 0;color:#fff}.header__content{display:flex;justify-content:space-between;align-items:center;min-height:132px}.header__content-avatar{width:132px;height:132px;margin-right:27px}.header__content-avatar .avatar-image{width:100%;height:auto;border-radius:50%}.header__content-name{font-family:Montserrat;font-size:37px;font-weight:700;letter-spacing:4px}.header__content-speciality{font-family:"Open Sans - Semibold";font-size:21px}.header__contacts{display:flex;flex-direction:column;justify-content:space-between;min-height:146px;font-family:"Open Sans";font-size:17px}.header__contacts-location{display:inline-flex;align-items:center}.header__contacts-location .location-icon{margin-right:15px}.header__contacts-location .location-text{margin:0}.header__contacts-location .ymaps-2-1-71-geolink-processed:before{content:none}.header__contacts-location .ymaps-2-1-71-geolink-processed{margin-left:0}.header__contacts-mail{display:flex;align-items:center}.header__contacts-mail .mail-icon{margin-right:15px}.header__contacts-mail .mail-text{margin:0}.header__contacts-phone{display:flex;align-items:center}.header__contacts-phone .phone-icon{margin-right:15px}.header__contacts-phone .phone-text{margin:0}.header__contacts-phone .phone-text a{color:#fff;border-bottom:1px dashed;text-decoration:unset}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
