/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */button,hr,input{overflow:visible}progress,sub,sup{vertical-align:baseline}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}hr{box-sizing:content-box;height:0}pre{}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}.header-wrap{grid-area:header}.left-side{grid-area:left}.form-wrapper{display:grid;grid-template-columns:minmax(auto,324px) minmax(auto,636px);grid-template-rows:repeat(2,auto);grid-template-areas:"header header" "left right";-webkit-column-gap:20px;column-gap:20px;max-width:960px;height:auto;margin:0 auto}.form-item__box{margin:30px 0}.form-text__title{display:flex;align-items:center;font-family:Montserrat;font-size:24px}.form-text__content{font-family:"Open Sans";font-size:17px;line-height:27px}.form-shape__circle{align-self:center;width:14px;height:14px;border:2px solid #404545;border-radius:50%}.form-shape__circle:after{content:"";display:block;position:relative;border-right:2px solid #404545;width:0;height:99px;top:16px;left:6px}.education-item:last-child .form-shape__circle:after,.header__contacts-location .ymaps-2-1-71-geolink-processed:before,.reference-item:last-child .form-shape__circle:after,.work-item:last-child .form-shape__circle:after{content:none}.header-wrap{width:100%;height:auto;background-color:#344eff}.header{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;max-width:960px;height:auto;margin:0 auto;padding:48px 74px 34px;color:#fff}.header__content{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;margin:10px 10px 10px 0;min-height:132px}.header__content-avatar{width:132px;height:132px;margin-right:27px}.header__content-avatar .avatar-image{width:100%;height:auto;border-radius:50%}.header__content-name{font-family:Montserrat;font-size:37px;font-weight:700;letter-spacing:4px}.header__content-title{margin:10px 0}.header__content-speciality{font-family:"Open Sans - Semibold";font-size:21px}.header__contacts,.left-side{font-family:"Open Sans"}.header__contacts{display:flex;flex-direction:column;justify-content:space-around;min-height:146px;margin:10px 0;font-size:17px}.header__contacts-location{display:inline-flex;align-items:center}.header__contacts-location .location-icon{margin-right:15px}.header__contacts-location .location-text{margin:0}.header__contacts-location .ymaps-2-1-71-geolink-processed{margin-left:0}.header__contacts-location .ymaps-2-1-71-ymaps-geolink-light:hover{color:#DE3C4B}.header__contacts-mail{display:flex;align-items:center}.header__contacts-mail .mail-icon{margin-right:15px}.header__contacts-mail .mail-text{margin:0}.header__contacts-phone{display:flex;align-items:center}.header__contacts-phone .phone-icon{margin-right:15px}.header__contacts-phone .phone-text{margin:0}.header__contacts-phone .phone-text a{color:#fff;border-bottom:1px dashed;text-decoration:unset}.header__contacts-phone .phone-text a:hover{color:#DE3C4B;border-bottom:none}@media (max-width:940px){.header{padding:30px 15px}.header__contacts-item{padding:10px 0}}@media (max-width:450px){.header{padding:10px}.header__content{margin:10px 0 0}}.left-side{padding:15px 10px 30px 75px}.left__awards-title .form-text__title:before,.left__interests-title .form-text__title:before,.left__profile-title .form-text__title:before,.left__reference-title .form-text__title:before{content:url(../images/content_icons/bag-one.png);margin-right:20px}.left__interests-content{display:flex;justify-content:space-between}.left__interests-content .biking-text,.left__interests-content .gaming-text,.left__interests-content .music-text{margin:10px 0;font-family:"Open Sans - Semibold";font-size:17px;font-weight:600}.reference-item{display:flex;flex-direction:row;align-items:center;margin:20px 0;font-size:17px;font-weight:600}.reference-item__content{margin-left:30px}.reference-item__time{margin:10px 0;color:#404545}.reference-item__name{margin:10px 0;color:#344ffe}.reference-item__position{margin:10px 0;color:#404545}.left__awards-content{font-weight:600}@media (max-width:940px){.left-side{padding:30px 15px}}@media (max-width:450px){.left-side{padding:10px}}.right-side{grid-area:right;padding:15px 75px 30px 10px;font-family:"Open Sans"}.right__work-title .form-text__title:before{content:url(../images/content_icons/bag-one.png);margin-right:20px}.right__education-title .form-text__title:before{content:url(../images/content_icons/bag-two.png);margin-right:20px}.right__skills-title .form-text__title:before{content:url(../images/content_icons/graphic.png);margin-right:20px}.right-side .item--leftbar{margin:0 0 0 20px;font-weight:600}.right__education-content,.right__skills-content,.right__work-content{margin-left:40px}.right__education-content .education-item,.right__work-content .work-item{display:grid;grid-template-columns:1fr 5fr minmax(auto,265px);-webkit-column-gap:10px;column-gap:10px;margin:21px 0}.right__skills-content{display:flex;justify-content:space-between}.right__skills-content .skills-item{display:flex;flex-direction:column;align-items:center}.skills-item__circle{display:flex;align-items:center;justify-content:center;position:relative;width:86px;height:86px;border-radius:50%;z-index:12}.skills-item__circle:after{height:82px;width:82px;border-radius:50%;display:block;content:"";background:#fff;position:absolute;left:2px;top:2px}.skills-item__circle:before{display:block;position:absolute;font-size:24px;z-index:10}.form-shape__c-1:before{content:"84%"}.form-shape__c-2:before{content:"78%"}.form-shape__c-3:before{content:"46%"}.form-shape__c-4:before{content:"61%"}.form-shape__c-1{background-image:linear-gradient(230deg,transparent 50%,#344eff 50%),linear-gradient(90deg,transparent 50%,#344eff 50%)}.form-shape__c-2{background-image:linear-gradient(200deg,transparent 50%,#344eff 50%),linear-gradient(90deg,transparent 50%,#344eff 50%)}.form-shape__c-3{background-image:linear-gradient(140deg,transparent 50%,#344eff 50%),linear-gradient(90deg,transparent 50%,#344eff 50%)}.form-shape__c-4{background-image:linear-gradient(180deg,transparent 50%,#344eff 50%),linear-gradient(90deg,transparent 50%,#344eff 50%)}.education-item__time,.work-item__time{margin:10px 0;color:#404545}.education-item__company,.work-item__company{margin:10px 0;color:#344ffe}.education-item__position,.work-item__position{margin:10px 0;color:#404545}.skills-item__subtitle-text{font-size:17px;font-weight:600}@media (max-width:940px){.right-side{padding:30px 15px}}@media (max-width:450px){.right-side{padding:10px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
