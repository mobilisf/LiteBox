/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */button,hr,input{overflow:visible}progress,sub,sup{vertical-align:baseline}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}hr{box-sizing:content-box;height:0}pre{}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}.header-wrap{grid-area:header}.left-side{grid-area:left}.right-side{grid-area:right;background:gray}.form-wrapper{display:grid;grid-template-columns:minmax(auto,324px) minmax(auto,636px);grid-template-rows:repeat(2,auto);grid-template-areas:"header header" "left right";-webkit-column-gap:10px;column-gap:10px;max-width:960px;height:auto;margin:0 auto}.form-item__box{margin:30px 0}.form-text__title{display:flex;align-items:center;font-family:Montserrat;font-size:24px}.form-text__content{font-family:"Open Sans";font-size:17px;line-height:27px}.form-shape__circle{width:14px;height:14px;border:2px solid #404545;border-radius:50%}.form-shape__circle:after{content:"";display:block;position:relative;border-right:2px solid #404545;width:0;height:99px;top:16px;left:6px}.header__contacts-location .ymaps-2-1-71-geolink-processed:before,.reference-item:last-child .form-shape__circle:after{content:none}.header-wrap{width:100%;height:auto;background-color:#344eff}.header{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;max-width:960px;height:auto;margin:0 auto;padding:48px 74px 34px;color:#fff}.header__content{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;margin:10px 10px 10px 0;min-height:132px}.header__content-avatar{width:132px;height:132px;margin-right:27px}.header__content-avatar .avatar-image{width:100%;height:auto;border-radius:50%}.header__content-name{font-family:Montserrat;font-size:37px;font-weight:700;letter-spacing:4px}.header__content-title{margin:10px 0}.header__content-speciality{font-family:"Open Sans - Semibold";font-size:21px}.header__contacts,.left-side{font-family:"Open Sans"}.header__contacts{display:flex;flex-direction:column;justify-content:space-around;min-height:146px;margin:10px 0;font-size:17px}.header__contacts-location{display:inline-flex;align-items:center}.header__contacts-location .location-icon{margin-right:15px}.header__contacts-location .location-text{margin:0}.header__contacts-location .ymaps-2-1-71-geolink-processed{margin-left:0}.header__contacts-location .ymaps-2-1-71-ymaps-geolink-light:hover{color:#DE3C4B}.header__contacts-mail{display:flex;align-items:center}.header__contacts-mail .mail-icon{margin-right:15px}.header__contacts-mail .mail-text{margin:0}.header__contacts-phone{display:flex;align-items:center}.header__contacts-phone .phone-icon{margin-right:15px}.header__contacts-phone .phone-text{margin:0}.header__contacts-phone .phone-text a{color:#fff;border-bottom:1px dashed;text-decoration:unset}.header__contacts-phone .phone-text a:hover{color:#DE3C4B;border-bottom:none}@media (max-width:940px){.header{padding:30px 15px}.header__contacts-item{padding:10px 0}}@media (max-width:450px){.header{padding:10px}.header__content{margin:10px 0 0}}.left-side{padding:15px 10px 30px 75px}.left__awards-title .form-text__title:before,.left__interests-title .form-text__title:before,.left__profile-title .form-text__title:before,.left__reference-title .form-text__title:before{content:url(../images/content_icons/bag-one.png);margin-right:20px}.left__interests-content{display:flex;justify-content:space-between}.left__interests-content .biking-text,.left__interests-content .gaming-text,.left__interests-content .music-text{margin:10px 0;font-family:"Open Sans - Semibold";font-size:17px;font-weight:600}.reference-item{display:flex;flex-direction:row;align-items:center;margin:20px 0;font-size:17px;font-weight:600}.reference-item__content{position:relative;margin-left:30px}.reference-item__time{margin:10px 0;color:#404545}.reference-item__name{margin:10px 0;color:#344ffe}.reference-item__position{margin:10px 0;color:#404545}@media (max-width:940px){.left-side{padding:30px 15px}}@media (max-width:450px){.left-side{padding:10px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzIiwicGFydGlhbHMvY29tbW9uLnNjc3MiLCJtYWluLmNzcyIsInBhcnRpYWxzL2hlYWRlci5zY3NzIiwicGFydGlhbHMvbGVmdC1zaWRlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjRFQWtJQSxPQTlGQSxHQStGQSxNQUNFLFNBQXdwRSxRQXlEMXBFLFNBcEdBLElBQ0EsSUFvR0UsZUFBZ0IsU0F4TGxCLEtBQ0UsWUFBYSxLQUNiLHlCQUE4VixLQU9oVyxLQUNFLE9BQVEsRUE4TlYsUUF6TkEsS0FDRSxRQUFTLE1BS1gsR0FDRSxVQUFXLElBQ1gsT0FBUSxNQUFPLEVBNkNqQixLQUNBLElBL0JBLElBZ0NBLEtBQ0UsWUFBYSxVQUFXLFVBQ3hCLFVBQTZpRCxJQTFDL2lELEdBQ0UsV0FBWSxZQUNaLE9BQTAyQixFQU01MkIsS0FTQSxFQUNFLGlCQUFrQixZQUtwQixZQUNFLGNBQWUsS0FDZixnQkFBKzBDLFVBQy8wQyxnQkFBdTFDLFVBQVUsT0FLbjJDLEVBQ0EsT0FDRSxZQUFhLE9BS2YsS0FDQSxJQUNBLE1BT0EsTUFDRSxVQUFXLElBS2IsSUFDQSxJQUNFLFVBQVcsSUFDWCxZQUFhLEVBQ2IsU0FBVSxTQUlaLElBQ0UsT0FBUSxPQUdWLElBQ0UsSUFBSyxNQU9QLElBQ0UsYUFBYyxLQU9oQixPQUNBLE1BQ0EsU0FDQSxPQUNBLFNBQ0UsWUFBYSxRQUNiLFVBQW9qRSxLQUNwakUsWUFBOGpFLEtBQzlqRSxPQUFpa0UsRUFLbmtFLE9BQ0EsT0FNQSxPQUNBLE9BQ0UsZUFBK3lFLEtBTWp6RSxjQUNBLGFBQ0EsY0FIQSxPQUlFLG1CQUFvQixPQU10QixnQ0FDQSwrQkFDQSxnQ0FIQSx5QkFJRSxhQUFjLEtBQ2QsUUFBUyxFQU1YLDZCQUNBLDRCQUNBLDZCQUhBLHNCQUlFLFFBQW9CLFdBQVAsT0FBSixJQUtYLFNBQ0UsUUFBUyxNQUFPLE1BQU8sT0FLekIs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LElBRUosZ0JFM0lJLFFBQUEsS0FDQSxlQUFBLElBQ0EsWUFBQSxPQUNBLE9BQUEsS0FBQSxFQUNBLFVBQUEsS0Y2SUYsWUFBQSxJQUVGLHlCRTFJSSxTQUFBLFNGNElGLFlBQUEsS0FFRixzQkV6SUksT0FBQSxLQUFBLEVGMklGLE1BQUEsUUFFRixzQkV4SUksT0FBQSxLQUFBLEVGMElGLE1BQUEsUUFFRiwwQkV2SUksT0FBQSxLQUFBLEVGeUlGLE1BQUEsUUFFRix5QkFDRSxXQUNFLFFBQUEsS0FBQSxNQUVKLHlCQUNFLFdBQ0UsUUFBQSIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCJAaW1wb3J0IFwicGFydGlhbHMvdmFyaWFibGVzLnNjc3NcIjtcclxuXHJcbiRjb2xvci1mb3JtLWNpcmNsZTogJGNvbG9yLWxpZ2h0LWdyYXk7XHJcblxyXG4uaGVhZGVyLXdyYXAgeyAgZ3JpZC1hcmVhOiBoZWFkZXI7IH1cclxuLmxlZnQtc2lkZSB7IGdyaWQtYXJlYTogbGVmdCB9XHJcbi5yaWdodC1zaWRlIHsgZ3JpZC1hcmVhOiByaWdodCB9XHJcblxyXG4uZm9ybS13cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IG1pbm1heChhdXRvLCAzMjRweCkgbWlubWF4KGF1dG8sIDYzNnB4KTtcclxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIGF1dG8pO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXHJcbiAgICAgICAgXCJoZWFkZXIgaGVhZGVyXCJcclxuICAgICAgICBcImxlZnQgcmlnaHRcIjtcclxuICAgIGNvbHVtbi1nYXA6IDEwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDk2MHB4O1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi5mb3JtLWl0ZW1fX2JveCB7XHJcbiAgICBtYXJnaW46IDMwcHggMDtcclxufVxyXG5cclxuLmZvcm0tdGV4dF9fdGl0bGUge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogTW9udHNlcnJhdDtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxufVxyXG5cclxuLmZvcm0tdGV4dF9fY29udGVudCB7XHJcbiAgICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIjtcclxuICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyN3B4O1xyXG59XHJcblxyXG4uZm9ybS1zaGFwZV9fY2lyY2xlIHtcclxuICAgIHdpZHRoOiAxNHB4O1xyXG4gICAgaGVpZ2h0OiAxNHB4O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgJGNvbG9yLWZvcm0tY2lyY2xlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcblxyXG4uZm9ybS1zaGFwZV9fY2lyY2xlOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvcmRlci1yaWdodDogMnB4IHNvbGlkICRjb2xvci1mb3JtLWNpcmNsZTtcclxuICAgIHdpZHRoOiAwO1xyXG4gICAgaGVpZ2h0OiA5OXB4O1xyXG4gICAgdG9wOiAxNnB4O1xyXG4gICAgbGVmdDogNnB4O1xyXG4gIH1cclxuXHJcbi5yZWZlcmVuY2UtaXRlbTpsYXN0LWNoaWxkIC5mb3JtLXNoYXBlX19jaXJjbGU6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBub25lO1xyXG4gIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuLnJpZ2h0LXNpZGUge1xyXG5cclxuICAgIGJhY2tncm91bmQ6IGdyYXk7XHJcbn0iLCIvKiBDb2xvciBzY2hlbWUgKi9cbkBpbXBvcnQgdXJsKC4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzKTtcbi5oZWFkZXItd3JhcCB7XG4gIGdyaWQtYXJlYTogaGVhZGVyOyB9XG5cbi5sZWZ0LXNpZGUge1xuICBncmlkLWFyZWE6IGxlZnQ7IH1cblxuLnJpZ2h0LXNpZGUge1xuICBncmlkLWFyZWE6IHJpZ2h0OyB9XG5cbi5mb3JtLXdyYXBwZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IG1pbm1heChhdXRvLCAzMjRweCkgbWlubWF4KGF1dG8sIDYzNnB4KTtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMiwgYXV0byk7XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiaGVhZGVyIGhlYWRlclwiXHIgXCJsZWZ0IHJpZ2h0XCI7XG4gIGNvbHVtbi1nYXA6IDEwcHg7XG4gIG1heC13aWR0aDogOTYwcHg7XG4gIGhlaWdodDogYXV0bztcbiAgbWFyZ2luOiAwIGF1dG87IH1cblxuLmZvcm0taXRlbV9fYm94IHtcbiAgbWFyZ2luOiAzMHB4IDA7IH1cblxuLmZvcm0tdGV4dF9fdGl0bGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LWZhbWlseTogTW9udHNlcnJhdDtcbiAgZm9udC1zaXplOiAyNHB4OyB9XG5cbi5mb3JtLXRleHRfX2NvbnRlbnQge1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIjtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBsaW5lLWhlaWdodDogMjdweDsgfVxuXG4uZm9ybS1zaGFwZV9fY2lyY2xlIHtcbiAgd2lkdGg6IDE0cHg7XG4gIGhlaWdodDogMTRweDtcbiAgYm9yZGVyOiAycHggc29saWQgIzQwNDU0NTtcbiAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG5cbi5mb3JtLXNoYXBlX19jaXJjbGU6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCAjNDA0NTQ1O1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiA5OXB4O1xuICB0b3A6IDE2cHg7XG4gIGxlZnQ6IDZweDsgfVxuXG4ucmVmZXJlbmNlLWl0ZW06bGFzdC1jaGlsZCAuZm9ybS1zaGFwZV9fY2lyY2xlOmFmdGVyIHtcbiAgY29udGVudDogbm9uZTsgfVxuXG4ucmlnaHQtc2lkZSB7XG4gIGJhY2tncm91bmQ6IGdyYXk7IH1cblxuLyogQ29sb3Igc2NoZW1lICovXG4uaGVhZGVyLXdyYXAge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ0ZWZmOyB9XG5cbi5oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgbWF4LXdpZHRoOiA5NjBweDtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogNDhweCA3NHB4IDM0cHggNzRweDtcbiAgY29sb3I6ICNmZmY7IH1cbiAgLmhlYWRlcl9fY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiAxMHB4IDEwcHggMTBweCAwO1xuICAgIG1pbi1oZWlnaHQ6IDEzMnB4OyB9XG4gIC5oZWFkZXJfX2NvbnRlbnQtYXZhdGFyIHtcbiAgICB3aWR0aDogMTMycHg7XG4gICAgaGVpZ2h0OiAxMzJweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDI3cHg7IH1cbiAgICAuaGVhZGVyX19jb250ZW50LWF2YXRhciAuYXZhdGFyLWltYWdlIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG4gIC5oZWFkZXJfX2NvbnRlbnQtbmFtZSB7XG4gICAgZm9udC1mYW1pbHk6IE1vbnRzZXJyYXQ7XG4gICAgZm9udC1zaXplOiAzN3B4O1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDRweDsgfVxuICAuaGVhZGVyX19jb250ZW50LXRpdGxlIHtcbiAgICBtYXJnaW46IDEwcHggMDsgfVxuICAuaGVhZGVyX19jb250ZW50LXNwZWNpYWxpdHkge1xuICAgIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2FucyAtIFNlbWlib2xkXCI7XG4gICAgZm9udC1zaXplOiAyMXB4OyB9XG4gIC5oZWFkZXJfX2NvbnRhY3RzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgbWluLWhlaWdodDogMTQ2cHg7XG4gICAgbWFyZ2luOiAxMHB4IDA7XG4gICAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCI7XG4gICAgZm9udC1zaXplOiAxN3B4OyB9XG4gIC5oZWFkZXJfX2NvbnRhY3RzLWxvY2F0aW9uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgLmhlYWRlcl9fY29udGFjdHMtbG9jYXRpb24gLmxvY2F0aW9uLWljb24ge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4OyB9XG4gICAgLmhlYWRlcl9fY29udGFjdHMtbG9jYXRpb24gLmxvY2F0aW9uLXRleHQge1xuICAgICAgbWFyZ2luOiAwOyB9XG4gICAgLmhlYWRlcl9fY29udGFjdHMtbG9jYXRpb24gLnltYXBzLTItMS03MS1nZW9saW5rLXByb2Nlc3NlZDpiZWZvcmUge1xuICAgICAgY29udGVudDogbm9uZTsgfVxuICAgIC5oZWFkZXJfX2NvbnRhY3RzLWxvY2F0aW9uIC55bWFwcy0yLTEtNzEtZ2VvbGluay1wcm9jZXNzZWQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgICAuaGVhZGVyX19jb250YWN0cy1sb2NhdGlvbiAueW1hcHMtMi0xLTcxLXltYXBzLWdlb2xpbmstbGlnaHQ6aG92ZXIge1xuICAgICAgY29sb3I6ICNERTNDNEI7IH1cbiAgLmhlYWRlcl9fY29udGFjdHMtbWFpbCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgLmhlYWRlcl9fY29udGFjdHMtbWFpbCAubWFpbC1pY29uIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMTVweDsgfVxuICAgIC5oZWFkZXJfX2NvbnRhY3RzLW1haWwgLm1haWwtdGV4dCB7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgLmhlYWRlcl9fY29udGFjdHMtcGhvbmUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAgIC5oZWFkZXJfX2NvbnRhY3RzLXBob25lIC5waG9uZS1pY29uIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMTVweDsgfVxuICAgIC5oZWFkZXJfX2NvbnRhY3RzLXBob25lIC5waG9uZS10ZXh0IHtcbiAgICAgIG1hcmdpbjogMDsgfVxuICAgIC5oZWFkZXJfX2NvbnRhY3RzLXBob25lIC5waG9uZS10ZXh0IGEge1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggZGFzaGVkO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bnNldDsgfVxuICAgIC5oZWFkZXJfX2NvbnRhY3RzLXBob25lIC5waG9uZS10ZXh0IGE6aG92ZXIge1xuICAgICAgY29sb3I6ICNERTNDNEI7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5NDBweCkge1xuICAuaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAzMHB4IDE1cHg7IH1cbiAgLmhlYWRlcl9fY29udGFjdHMtaXRlbSB7XG4gICAgcGFkZGluZzogMTBweCAwOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIHBhZGRpbmc6IDEwcHggMTBweDsgfVxuICAuaGVhZGVyX19jb250ZW50IHtcbiAgICBtYXJnaW46IDEwcHggMCAwIDA7IH0gfVxuXG4vKiBDb2xvciBzY2hlbWUgKi9cbi5sZWZ0LXNpZGUge1xuICBwYWRkaW5nOiAxNXB4IDEwcHggMzBweCA3NXB4O1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIjsgfVxuXG4ubGVmdF9fcHJvZmlsZS10aXRsZSAuZm9ybS10ZXh0X190aXRsZTpiZWZvcmUge1xuICBjb250ZW50OiB1cmwoXCIuLi9pbWFnZXMvY29udGVudF9pY29ucy9iYWctb25lLnBuZ1wiKTtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4OyB9XG5cbi5sZWZ0X19pbnRlcmVzdHMtdGl0bGUgLmZvcm0tdGV4dF9fdGl0bGU6YmVmb3JlIHtcbiAgY29udGVudDogdXJsKFwiLi4vaW1hZ2VzL2NvbnRlbnRfaWNvbnMvYmFnLW9uZS5wbmdcIik7XG4gIG1hcmdpbi1yaWdodDogMjBweDsgfVxuXG4ubGVmdF9fcmVmZXJlbmNlLXRpdGxlIC5mb3JtLXRleHRfX3RpdGxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IHVybChcIi4uL2ltYWdlcy9jb250ZW50X2ljb25zL2JhZy1vbmUucG5nXCIpO1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7IH1cblxuLmxlZnRfX2F3YXJkcy10aXRsZSAuZm9ybS10ZXh0X190aXRsZTpiZWZvcmUge1xuICBjb250ZW50OiB1cmwoXCIuLi9pbWFnZXMvY29udGVudF9pY29ucy9iYWctb25lLnBuZ1wiKTtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4OyB9XG5cbi5sZWZ0X19pbnRlcmVzdHMtY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICAubGVmdF9faW50ZXJlc3RzLWNvbnRlbnQgLm11c2ljLXRleHQsXG4gIC5sZWZ0X19pbnRlcmVzdHMtY29udGVudCAuZ2FtaW5nLXRleHQsXG4gIC5sZWZ0X19pbnRlcmVzdHMtY29udGVudCAuYmlraW5nLXRleHQge1xuICAgIG1hcmdpbjogMTBweCAwO1xuICAgIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2FucyAtIFNlbWlib2xkXCI7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuLnJlZmVyZW5jZS1pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAyMHB4IDA7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuXG4ucmVmZXJlbmNlLWl0ZW1fX2NvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1sZWZ0OiAzMHB4OyB9XG5cbi5yZWZlcmVuY2UtaXRlbV9fdGltZSB7XG4gIG1hcmdpbjogMTBweCAwO1xuICBjb2xvcjogIzQwNDU0NTsgfVxuXG4ucmVmZXJlbmNlLWl0ZW1fX25hbWUge1xuICBtYXJnaW46IDEwcHggMDtcbiAgY29sb3I6ICMzNDRmZmU7IH1cblxuLnJlZmVyZW5jZS1pdGVtX19wb3NpdGlvbiB7XG4gIG1hcmdpbjogMTBweCAwO1xuICBjb2xvcjogIzQwNDU0NTsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTQwcHgpIHtcbiAgLmxlZnQtc2lkZSB7XG4gICAgcGFkZGluZzogMzBweCAxNXB4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XG4gIC5sZWZ0LXNpZGUge1xuICAgIHBhZGRpbmc6IDEwcHggMTBweDsgfSB9XG5cbi8qIENvbG9yIHNjaGVtZSAqL1xuIiwiQGltcG9ydCBcInBhcnRpYWxzL3ZhcmlhYmxlcy5zY3NzXCI7XHJcblxyXG4kaGVhZGVyLWJhY2tncm91bmQtY29sb3I6ICRjb2xvci1kYXJrLWJsdWU7XHJcbiRoZWFkZXItZm9udC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4kaGVhZGVyLWZvbnQtaG92ZXItY29sb3I6ICRjb2xvci1yZWQ7XHJcblxyXG4uaGVhZGVyLXdyYXAge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaGVhZGVyLWJhY2tncm91bmQtY29sb3I7XHJcbn1cclxuXHJcbi5oZWFkZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBtYXgtd2lkdGg6IDk2MHB4O1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiA0OHB4IDc0cHggMzRweCA3NHB4O1xyXG4gICAgY29sb3I6ICRoZWFkZXItZm9udC1jb2xvcjtcclxuXHJcbiAgICAmX19jb250ZW50IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBtYXJnaW46IDEwcHggMTBweCAxMHB4IDA7XHJcbiAgICAgICAgbWluLWhlaWdodDogMTMycHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGVudC1hdmF0YXIge1xyXG4gICAgICAgIHdpZHRoOiAxMzJweDtcclxuICAgICAgICBoZWlnaHQ6IDEzMnB4O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMjdweDtcclxuXHJcbiAgICAgICAgLmF2YXRhci1pbWFnZSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGVudC1uYW1lIHtcclxuICAgICAgICBmb250LWZhbWlseTogTW9udHNlcnJhdDtcclxuICAgICAgICBmb250LXNpemU6IDM3cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogNHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnQtdGl0bGUge1xyXG4gICAgICAgIG1hcmdpbjogMTBweCAwO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnQtc3BlY2lhbGl0eSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zIC0gU2VtaWJvbGRcIjtcclxuICAgICAgICBmb250LXNpemU6IDIxcHg7IFxyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRhY3RzIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICAgICAgbWluLWhlaWdodDogMTQ2cHg7XHJcbiAgICAgICAgbWFyZ2luOiAxMHB4IDA7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCI7XHJcbiAgICAgICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRhY3RzLWxvY2F0aW9uIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAubG9jYXRpb24taWNvbiB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5sb2NhdGlvbi10ZXh0IHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnltYXBzLTItMS03MS1nZW9saW5rLXByb2Nlc3NlZDpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnltYXBzLTItMS03MS1nZW9saW5rLXByb2Nlc3NlZCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnltYXBzLTItMS03MS15bWFwcy1nZW9saW5rLWxpZ2h0OmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICRoZWFkZXItZm9udC1ob3Zlci1jb2xvcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGFjdHMtbWFpbCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAubWFpbC1pY29uIHtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm1haWwtdGV4dCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGFjdHMtcGhvbmUge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgLnBob25lLWljb24ge1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAucGhvbmUtdGV4dCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5waG9uZS10ZXh0IGEge1xyXG4gICAgICAgICAgICBjb2xvcjogJGhlYWRlci1mb250LWNvbG9yO1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggZGFzaGVkO1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuc2V0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnBob25lLXRleHQgYTpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkaGVhZGVyLWZvbnQtaG92ZXItY29sb3I7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogOTQwcHgpIHtcclxuICAgIC5oZWFkZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDMwcHggMTVweDtcclxuICAgIH1cclxuXHJcbiAgICAuaGVhZGVyX19jb250YWN0cy1pdGVtIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xyXG4gICAgLmhlYWRlciB7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAxMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5oZWFkZXJfX2NvbnRlbnQge1xyXG4gICAgICAgIG1hcmdpbjogMTBweCAwIDAgMDtcclxuICAgIH1cclxufSIsIkBpbXBvcnQgXCJwYXJ0aWFscy92YXJpYWJsZXMuc2Nzc1wiO1xyXG5cclxuJGNvbG9yLWZvbnQtdGltZTogJGNvbG9yLWxpZ2h0LWdyYXk7XHJcbiRjb2xvci1mb250LW5hbWU6ICRjb2xvci1ibHVlO1xyXG4kY29sb3ItZm9udC1wb3NpdGlvbjogJGNvbG9yLWxpZ2h0LWdyYXk7XHJcblxyXG4ubGVmdC1zaWRlIHtcclxuICAgIHBhZGRpbmc6IDE1cHggMTBweCAzMHB4IDc1cHg7XHJcbiAgICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIjtcclxufVxyXG5cclxuLmxlZnRfX3Byb2ZpbGUtdGl0bGUgLmZvcm0tdGV4dF9fdGl0bGU6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnRfaWNvbnMvYmFnLW9uZS5wbmcnKTtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxufVxyXG5cclxuLmxlZnRfX2ludGVyZXN0cy10aXRsZSAuZm9ybS10ZXh0X190aXRsZTpiZWZvcmUge1xyXG4gICAgY29udGVudDogdXJsKCcuLi9pbWFnZXMvY29udGVudF9pY29ucy9iYWctb25lLnBuZycpO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4ubGVmdF9fcmVmZXJlbmNlLXRpdGxlIC5mb3JtLXRleHRfX3RpdGxlOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiB1cmwoJy4uL2ltYWdlcy9jb250ZW50X2ljb25zL2JhZy1vbmUucG5nJyk7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbi5sZWZ0X19hd2FyZHMtdGl0bGUgLmZvcm0tdGV4dF9fdGl0bGU6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnRfaWNvbnMvYmFnLW9uZS5wbmcnKTtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxufVxyXG5cclxuLmxlZnRfX2ludGVyZXN0cy1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgLm11c2ljLXRleHQsXHJcbiAgICAuZ2FtaW5nLXRleHQsXHJcbiAgICAuYmlraW5nLXRleHQge1xyXG4gICAgICAgIG1hcmdpbjogMTBweCAwO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2FucyAtIFNlbWlib2xkXCI7XHJcbiAgICAgICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5yZWZlcmVuY2UtaXRlbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDIwcHggMDtcclxuICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi5yZWZlcmVuY2UtaXRlbV9fY29udGVudCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG5cclxuLnJlZmVyZW5jZS1pdGVtX190aW1lIHtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG4gICAgY29sb3I6ICRjb2xvci1mb250LXRpbWU7XHJcbn1cclxuXHJcbi5yZWZlcmVuY2UtaXRlbV9fbmFtZSB7XHJcbiAgICBtYXJnaW46IDEwcHggMDtcclxuICAgIGNvbG9yOiAkY29sb3ItZm9udC1uYW1lO1xyXG59XHJcblxyXG4ucmVmZXJlbmNlLWl0ZW1fX3Bvc2l0aW9uIHtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG4gICAgY29sb3I6ICRjb2xvci1mb250LXBvc2l0aW9uO1xyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogOTQwcHgpIHtcclxuICAgIC5sZWZ0LXNpZGUge1xyXG4gICAgICAgIHBhZGRpbmc6IDMwcHggMTVweDtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XHJcbiAgICAubGVmdC1zaWRlIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDEwcHg7XHJcbiAgICB9XHJcbn1cclxuIl19 */
